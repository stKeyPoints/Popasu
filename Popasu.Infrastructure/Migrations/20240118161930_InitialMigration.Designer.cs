// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Popasu.Infrastructure.Data;

#nullable disable

namespace Popasu.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240118161930_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Popasu.Domain.Model.Climate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("WindRoseId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WindRoseId");

                    b.ToTable("Climates");
                });

            modelBuilder.Entity("Popasu.Domain.Model.Parameter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClimateId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ParameterValueId")
                        .HasColumnType("uuid");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("WindRoseId")
                        .HasColumnType("uuid");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ClimateId");

                    b.HasIndex("ParameterValueId");

                    b.HasIndex("WindRoseId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("Popasu.Domain.Model.ParameterValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Date")
                        .HasColumnType("integer");

                    b.Property<int>("Month")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ParametersValues");
                });

            modelBuilder.Entity("Popasu.Domain.Model.WindRose", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("WindRoses");
                });

            modelBuilder.Entity("Popasu.Domain.Model.Climate", b =>
                {
                    b.HasOne("Popasu.Domain.Model.WindRose", "WindRose")
                        .WithMany()
                        .HasForeignKey("WindRoseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WindRose");
                });

            modelBuilder.Entity("Popasu.Domain.Model.Parameter", b =>
                {
                    b.HasOne("Popasu.Domain.Model.Climate", null)
                        .WithMany("Parameters")
                        .HasForeignKey("ClimateId");

                    b.HasOne("Popasu.Domain.Model.ParameterValue", "ParameterValue")
                        .WithMany()
                        .HasForeignKey("ParameterValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popasu.Domain.Model.WindRose", null)
                        .WithMany("Parameters")
                        .HasForeignKey("WindRoseId");

                    b.Navigation("ParameterValue");
                });

            modelBuilder.Entity("Popasu.Domain.Model.Climate", b =>
                {
                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("Popasu.Domain.Model.WindRose", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
